version: "3.8"

services:
  oraclous-core-service:
    build: ./oraclous-core-service
    ports:
      - "8001:8000"
    env_file:
      - ./oraclous-core-service/.env
    volumes:
      - ./oraclous-core-service:/app
    networks:
      - app-network
  
  neo4j:
    image: neo4j:5.23-community
    container_name: neo4j_llm_graph
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
    networks:
      - app-network

  knowledge-graph-builder:
    build: 
      context: ./knowledge-graph-builder
      dockerfile: Dockerfile
    container_name: knowledge-graph-builder
    restart: unless-stopped
    ports:
      - "8003:8000"
    environment:
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
    env_file:
      - .env
    depends_on:
      - neo4j
    volumes:
      - ./knowledge-graph-builder/app:/app
    networks:
      - app-network

  auth-service:
    build: 
      context: ./auth-service
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    env_file:
      - ./auth-service/.env
    volumes:
      - ./auth-service:/app
    networks:
      - app-network
  
  credential-broker-service:
    build: 
      context: ./credential-broker-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    env_file:
      - ./credential-broker-service/.env
    volumes:
      - ./credential-broker-service:/app
    networks:
      - app-network
  

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdatabase
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_plugins:
  pgdata: